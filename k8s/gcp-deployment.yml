# Production deployment with all secrets configured
apiVersion: v1
kind: Namespace
metadata: {name: agentkit}
---
apiVersion: v1
kind: Secret
metadata:
  name: agentkit-secrets
  namespace: agentkit
type: Opaque
stringData:
  # Google Services
  GOOGLE_DOC_ID: "$GOOGLE_DOC_ID"
  GOOGLE_CREDENTIALS_JSON: "$GOOGLE_CREDENTIALS_JSON"
  
  # Social Media APIs
  TWITTER_API_KEY: "$TWITTER_API_KEY"
  TWITTER_API_SECRET: "$TWITTER_API_SECRET"
  TWITTER_ACCESS_TOKEN: "$TWITTER_ACCESS_TOKEN"
  TWITTER_ACCESS_TOKEN_SECRET: "$TWITTER_ACCESS_TOKEN_SECRET"
  
  LINKEDIN_USERNAME: "$LINKEDIN_USERNAME"
  LINKEDIN_PASSWORD: "$LINKEDIN_PASSWORD"
  
  FACEBOOK_ACCESS_TOKEN: "$FACEBOOK_ACCESS_TOKEN"
  FACEBOOK_PAGE_ID: "$FACEBOOK_PAGE_ID"
  
  REDDIT_CLIENT_ID: "$REDDIT_CLIENT_ID"
  REDDIT_CLIENT_SECRET: "$REDDIT_CLIENT_SECRET"
  REDDIT_USERNAME: "$REDDIT_USERNAME"
  REDDIT_PASSWORD: "$REDDIT_PASSWORD"
  
  # Email Configuration
  EMAIL_SMTP_SERVER: "smtp.gmail.com"
  EMAIL_SMTP_PORT: "587"
  EMAIL_USERNAME: "$EMAIL_USERNAME"
  EMAIL_PASSWORD: "$EMAIL_PASSWORD"
  EMAIL_FROM: "$EMAIL_FROM"
  
  # Notion
  NOTION_TOKEN: "$NOTION_TOKEN"
  
  # Other APIs
  AIRTABLE_API_KEY: "$AIRTABLE_API_KEY"
  DATADOG_API_KEY: "$DATADOG_API_KEY"
  DOCKER_API_KEY: "$DOCKER_API_KEY"
  GEMINI_API_KEY: "$GEMINI_API_KEY"
  GHUB_API_KEY: "$GHUB_API_KEY"
  MAILCHIMP_API_KEY: "$MAILCHIMP_API_KEY"
  MISTRALAI_API_KEY: "$MISTRALAI_API_KEY"
  THE_LAB_VERSE_AGENT_API_KEY: "$THE_LAB_VERSE_AGENT_API_KEY"
---
# Redis (A2A bus)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: agentkit
spec:
  replicas: 1
  selector:
    matchLabels: {app: redis}
  template:
    metadata:
      labels: {app: redis}
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports: [{containerPort: 6379}]
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: agentkit
spec:
  selector: {app: redis}
  ports: [{port: 6379, targetPort: 6379}]
---
# Command-Poller agent
apiVersion: apps/v1
kind: Deployment
metadata:
  name: command-poller
  namespace: agentkit
spec:
  replicas: 2
  selector:
    matchLabels: {app: command-poller}
  template:
    metadata:
      labels: {app: command-poller}
    spec:
      containers:
      - name: poller
        image: gcr.io/$GCP_PROJECT_ID/agentkit-command-poller:latest
        imagePullPolicy: Always
        env:
        - name: REDIS_URL
          value: "redis-service:6379"
        - name: GOOGLE_DOC_ID
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: GOOGLE_DOC_ID}
        - name: GOOGLE_CREDENTIALS_JSON
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: GOOGLE_CREDENTIALS_JSON}
        - name: NOTION_TOKEN
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: NOTION_TOKEN}
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
# Content-Distribution agent
apiVersion: apps/v1
kind: Deployment
metadata:
  name: content-distribution
  namespace: agentkit
spec:
  replicas: 2
  selector:
    matchLabels: {app: content-distribution}
  template:
    metadata:
      labels: {app: content-distribution}
    spec:
      containers:
      - name: distributor
        image: gcr.io/$GCP_PROJECT_ID/agentkit-content-distribution:latest
        imagePullPolicy: Always
        env:
        - name: REDIS_URL
          value: "redis-service:6379"
        - name: TWITTER_API_KEY
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: TWITTER_API_KEY}
        - name: TWITTER_API_SECRET
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: TWITTER_API_SECRET}
        - name: TWITTER_ACCESS_TOKEN
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: TWITTER_ACCESS_TOKEN}
        - name: TWITTER_ACCESS_TOKEN_SECRET
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: TWITTER_ACCESS_TOKEN_SECRET}
        - name: LINKEDIN_USERNAME
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: LINKEDIN_USERNAME}
        - name: LINKEDIN_PASSWORD
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: LINKEDIN_PASSWORD}
        - name: FACEBOOK_ACCESS_TOKEN
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: FACEBOOK_ACCESS_TOKEN}
        - name: FACEBOOK_PAGE_ID
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: FACEBOOK_PAGE_ID}
        - name: REDDIT_CLIENT_ID
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: REDDIT_CLIENT_ID}
        - name: REDDIT_CLIENT_SECRET
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: REDDIT_CLIENT_SECRET}
        - name: REDDIT_USERNAME
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: REDDIT_USERNAME}
        - name: REDDIT_PASSWORD
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: REDDIT_PASSWORD}
        - name: EMAIL_USERNAME
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: EMAIL_USERNAME}
        - name: EMAIL_PASSWORD
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: EMAIL_PASSWORD}
        - name: EMAIL_FROM
          valueFrom:
            secretKeyRef: {name: agentkit-secrets, key: EMAIL_FROM}
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
# Site Scanner agent
apiVersion: apps/v1
kind: Deployment
metadata:
  name: site-scanner
  namespace: agentkit
spec:
  replicas: 1
  selector:
    matchLabels: {app: site-scanner}
  template:
    metadata:
      labels: {app: site-scanner}
    spec:
      containers:
      - name: scanner
        image: gcr.io/$GCP_PROJECT_ID/agentkit-site-scanner:latest
        imagePullPolicy: Always
        env:
        - name: REDIS_URL
          value: "redis-service:6379"
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "1"
---
# Report Generator agent
apiVersion: apps/v1
kind: Deployment
metadata:
  name: report-generator
  namespace: agentkit
spec:
  replicas: 1
  selector:
    matchLabels: {app: report-generator}
  template:
    metadata:
      labels: {app: report-generator}
    spec:
      containers:
      - name: generator
        image: gcr.io/$GCP_PROJECT_ID/agentkit-report-generator:latest
        imagePullPolicy: Always
        env:
        - name: REDIS_URL
          value: "redis-service:6379"
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "1"